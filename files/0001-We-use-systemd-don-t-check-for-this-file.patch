From aa1f57926f8f380055b9020650952dfe4779a76c Mon Sep 17 00:00:00 2001
From: Joshua Strobl <joshua@stroblindustries.com>
Date: Sun, 19 Aug 2018 00:59:29 +0300
Subject: [PATCH 1/1] We use systemd, don't check for this file.

---
 src/daemon/CMakeLists.txt | 60 ++++++++++++++++++---------------------
 1 file changed, 28 insertions(+), 32 deletions(-)

diff --git a/src/daemon/CMakeLists.txt b/src/daemon/CMakeLists.txt
index 09056a7..eecb1f8 100644
--- a/src/daemon/CMakeLists.txt
+++ b/src/daemon/CMakeLists.txt
@@ -291,40 +291,36 @@ elseif (LINUX)
 
     endif ()
 
-    # A way to check for systemd
-    if (EXISTS "/run/systemd/system")
-        message(STATUS "systemd detected")
-        set(CKB_NEXT_INIT_SYSTEM "systemd" CACHE INTERNAL "")
-        set(DISALLOW_SYSVINIT TRUE)
-
-        # Generate and import service
-        message(STATUS "Generating and importing ckb-next-daemon.service (${CKB_NEXT_INIT_SYSTEM})")
-        configure_file(
-            "${ckb-next_SOURCE_DIR}/linux/systemd/ckb-next-daemon.service.in"
-            "${CMAKE_CURRENT_BINARY_DIR}/service/ckb-next-daemon.service"
-            @ONLY)
+    message(STATUS "systemd detected")
+    set(CKB_NEXT_INIT_SYSTEM "systemd" CACHE INTERNAL "")
+    set(DISALLOW_SYSVINIT TRUE)
 
-        if (SAFE_INSTALL)
-            foreach (daemon IN ITEMS "ckb-daemon" "ckb-next-daemon")
-                execute_process(
-                    COMMAND sudo systemctl is-active ${daemon}.service
-                    RESULT_VARIABLE daemon_active)
-                if ("${daemon_active}" EQUAL 0)
-                    message(STATUS "Running ${daemon} detected")
-                    install(CODE "message(STATUS \"${CKB_NEXT_INIT_SYSTEM}: stoppping ${daemon}\")")
-                    install(CODE "execute_process(COMMAND sudo systemctl stop ${daemon}.service)")
-                endif ()
-                execute_process(
-                    COMMAND sudo systemctl is-enabled ${daemon}.service
-                    RESULT_VARIABLE daemon_enabled)
-                if ("${daemon_enabled}" EQUAL 0)
-                    message(STATUS "Enabled ${daemon} detected")
-                    install(CODE "message(STATUS \"${CKB_NEXT_INIT_SYSTEM}: permanently disabling ${daemon}\")")
-                    install(CODE "execute_process(COMMAND sudo systemctl disable ${daemon}.service)")
-                endif ()
-            endforeach ()
-        endif ()
+    # Generate and import service
+    message(STATUS "Generating and importing ckb-next-daemon.service (${CKB_NEXT_INIT_SYSTEM})")
+    configure_file(
+        "${ckb-next_SOURCE_DIR}/linux/systemd/ckb-next-daemon.service.in"
+        "${CMAKE_CURRENT_BINARY_DIR}/service/ckb-next-daemon.service"
+        @ONLY)
 
+    if (SAFE_INSTALL)
+        foreach (daemon IN ITEMS "ckb-daemon" "ckb-next-daemon")
+            execute_process(
+                COMMAND sudo systemctl is-active ${daemon}.service
+                RESULT_VARIABLE daemon_active)
+            if ("${daemon_active}" EQUAL 0)
+                message(STATUS "Running ${daemon} detected")
+                install(CODE "message(STATUS \"${CKB_NEXT_INIT_SYSTEM}: stoppping ${daemon}\")")
+                install(CODE "execute_process(COMMAND sudo systemctl stop ${daemon}.service)")
+            endif ()
+            execute_process(
+                COMMAND sudo systemctl is-enabled ${daemon}.service
+                RESULT_VARIABLE daemon_enabled)
+            if ("${daemon_enabled}" EQUAL 0)
+                message(STATUS "Enabled ${daemon} detected")
+                install(CODE "message(STATUS \"${CKB_NEXT_INIT_SYSTEM}: permanently disabling ${daemon}\")")
+                install(CODE "execute_process(COMMAND sudo systemctl disable ${daemon}.service)")
+            endif ()
+        endforeach ()
     endif ()
 
     # A way to check for OpenRC
-- 
2.18.0

